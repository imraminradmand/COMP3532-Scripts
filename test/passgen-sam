#!/bin/bash

NFLAG='false'
LENGTH=8
LFLAG='false'
UFLAG='false'
DFLAG='false';
SFLAG='false';
EFLAG='false';
PFLAG='false';
USERID='';
USERNAME='';
UPPER="A-Z"
LOWER="a-z"
DIGITS="0-9"
SYMBOL="@#$%&*"
PASSWORD=""

function errorMsg(){                                                                                                                                                             
    # print default error message if not specify otherwise
    echo -e "\e[3m"${1:-"Usage: ./passgen -[n][0-50] -[p][username] -[ludse]"}"\e[0m" >&2; exit 1                                                                                                 
}

# handle p flag
function checkUserId(){
    # if $EUID != root then return error
    if [ "$EUID" -ne 0 ]; then
	errorMsg "Error: Please usep flag as root.";
    fi
    # check the password, grab the third column which is userid
    echo "The input user ID is:";
    cat /etc/passwd | awk -F: '{print $3}' | grep -e $1;
    if [[ $? == 0 ]]; then
	# if the previous output == 0 means there is userid matching /etc/passwd
        USERID=$1;
	# get the usename
	USERNAME=`cat /etc/passwd | grep $1 | awk -F: '{print $1}'`;
    else
	errorMsg "Error: User ID does not exist.";
    fi
}

while [ $# -gt 0 ]; do
    if [[ $1 =~ ^[^-] ]]; then
	errorMsg "Error: Flag must start with '-'.";
    fi

    # if the arg ends with "n" and has nothing following
    if [[ "$1" =~ ^-n$ ]]; then
	NFLAG='true';
	# if the next arg is number
	if [[ "$2" =~ ^[0-9]+$ ]]; then
	    LENGTH=$2;
	# if the next arg is not number
	else
	    errorMsg "Error: -n must be followed by number.";
	fi
	# escape one arg since the next arg is the length specified
	# in other words, jump right to the next flag
	shift
    elif [[ "$1" =~ ^-n[0-9]+$ ]]; then
	NFLAG='true';
	LENGTH=${1:2};
    fi

    # handle the p flag
    # if the arg ends with "p" and has nothing following
    if [[ $1 =~ ^-p$ ]]; then
	PFLAG='true';
	# the next arg should be user id
	# make sure it is not another flag
	if [[ "$2" =~ ^[0-9]+$ ]]; then
	    checkUserId $2;
	else
	    errorMsg "Error: Please enter the user id after p flag.";
	fi
	shift
    # incase it is not end with p, it means the userid is sticked to p flag
    elif [[ "$1" =~ ^-p[0-9]+$ ]]; then
	PFLAG='true';
	checkUserId ${1:2};
    fi
    
    # handle the ludse flag
    if [[ "$1" =~ [ludse]+$ ]]; then
	if [[ "$1" =~ l ]]; then
	    LFLAG='true';
	fi
	if [[ "$1" =~ u ]]; then
	    UFLAG='true';
	fi
	if [[ "$1" =~ d ]]; then
	    DFLAG='true';
	fi
	if [[ "$1" =~ s ]]; then
	    SFLAG='true';
	fi
	if [[ "$1" =~ e ]]; then
	    EFLAG='true';
	fi
    fi

    # basically incrementing the arg in the while loop
    shift
done

if [ $LENGTH -le 0 ]; then
    errorMsh "passgen: invalid -n argument '$LENGTH'"
else

    if [ $LFLAG = 'false' -a $UFLAG = 'false' -a $DFLAG = 'false' -a $SFLAG = 'false' ]; then
        LFLAG=true
    fi
    
    if [ $EFLAG = 'true' ]; then
        LOWER="a-km-z"
        UPPER="A-HJ-NP-Z"
        DIGITS="2-9"
    fi
    
    CHARS=''
    if [ $LFLAG = 'true' ]; then
        CHARS="$LOWER$CHARS"
    fi
    if [ $UFLAG = 'true' ]; then
        CHARS="$UPPER$CHARS"
    fi
    if [ $DFLAG = 'true' ]; then
        CHARS="$DIGITS$CHARS"
    fi
    if [ $SFLAG = 'true' ]; then
        CHARS="$SYMBOL$CHARS"
    fi

    PASSWORD=`tr -dc $CHARS < /dev/urandom | head -c${1:-$LENGTH};echo;`
    echo $PASSWORD

    if [ $PFLAG = 'true' ];then
	echo -e "The Username of \e[1m$USERID\e[0m is \e[1m$USERNAME\e[0m."
	echo $USERNAME:$PASSWORD | sudo chpasswd;
	echo -e "The password of \e[1m$USERID\e[0m has been changed to \e[1m$PASSWORD\e[0m."
    fi
fi
